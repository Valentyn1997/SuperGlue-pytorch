data:
  eval_input_dir: assets/scannet_sample_images/  # Path to the directory that contains the images
  eval_output_dir: dump_match_pairs/  # Path to the directory in which the .npz results and optional, visualizations are written
  eval_pairs_list: assets/scannet_sample_pairs_with_gt.txt  # Path to the list of image pairs for evaluation
  shuffle: True  # Shuffle ordering of pairs before processing
  batch_size: 4
  train_path: data/COCO2014/train2014/   # Path to the directory of training imgs
  val_path: data/COCO2014/val2014/   # Path to the directory of training imgs
  val_size: 1000
  resize: [640, 480]  # Resize the input image before running inference. If two numbers, resize to the exact dimensions, if one
                      # number, resize the max dimension, if -1, do not resize
  resize_float: True  # Resize the image after casting uint8 to float

optimizer:
  learning_rate: 0.001  # Learning rate

exp:
  viz: True  #  Visualize the matches and dump the plots
  eval: True  # Perform the evaluation (requires ground truth pose and intrinsics)
  opencv_display: False  # Visualize via OpenCV before saving output images
  fast_viz: True  # Use faster image visualization based on OpenCV instead of Matplotlib
  viz_extension: png  # Visualization file extension. Use pdf for highest-quality.
  show_keypoints: True  # Plot the keypoints in addition to the matches
  epochs: 20  #  Number of epochs
  accumulate_grad_batches: 1  # Gradient accumulation
  mlflow_uri: http://localhost:5100
  logging: True
  checkpoint: True
  checkpoint_path: checkpoints
  gpus: -1

model:
  superglue:
    weights:
    match_threshold: 0.2  # SuperGlue match threshold
    sinkhorn_iterations: 50  # Number of Sinkhorn iterations performed by SuperGlue
  superpoint:
    nms_radius: 4  # SuperPoint Non Maximum Suppression (NMS) radius (Must be positive)
    keypoint_threshold: 0.005  # SuperPoint keypoint detector confidence threshold
    max_keypoints: 1024  # Maximum number of keypoints detected by Superpoint ('-1' keeps all keypoints)

# Hydra defaults
defaults:
  - hydra/job_logging: colorlog
  - hydra/hydra_logging: colorlog